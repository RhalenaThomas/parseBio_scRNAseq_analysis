neurons <- readRDS("/Users/rhalenathomas/Documents/Data/scRNAseq/ParseExample/Ex2_48well/ParseNCADDsamplesNeurons.RDS")
library(Seurat)
library(tidyverse)
table(neurons$Line)
Idents(neurons) <- "Line"
levels(neurons)
table(neurons$DiseaseStatus,neurons$Line)
Idents(neurons) <- "DiseaseStatus"
levels(neurons)
# an integrate function
# Define a function for integrating a list of Seurat objects
integrate_seurat_objects <- function(seurat_list, dims = 1:30) {
# Normalize and find variable features for each object
for (i in 1:length(seurat_list)) {
seurat_list[[i]] <- NormalizeData(seurat_list[[i]], verbose = FALSE)
seurat_list[[i]] <- FindVariableFeatures(seurat_list[[i]], selection.method = "vst")
}
# Create an empty Seurat object to store the integrated data
integrated_seurat <- subset(seurat_list[[1]])
# Iterate over the list of Seurat objects
for (i in 1:length(seurat_list)) {
# Rename the 'orig.ident' metadata inside the Seurat object to match the object name in the list
seurat_list[[i]]$orig.ident <- names(seurat_list)[i]
}
sample.list <- seurat_list
for (i in 1:length(sample.list)) {
# Normalize and scale the data
sample.list[[i]] <- NormalizeData(sample.list[[i]], verbose = FALSE)
sample.list[[i]] <- ScaleData(sample.list[[i]], verbose = FALSE)
# Find variable features
sample.list[[i]] <- FindVariableFeatures(sample.list[[i]], selection.method = "vst")
# Get the variable features
variable_features <- VariableFeatures(sample.list[[i]])
# Run PCA with the variable features
sample.list[[i]] <- RunPCA(sample.list[[i]], verbose = FALSE, npcs = 30, features = variable_features)
}
# Find integration anchors
int.anchors <- FindIntegrationAnchors(object.list = sample.list, dims = dims, reduction = "rpca")
# Integrate data
integrated_seurat <- IntegrateData(anchorset = int.anchors, dims = dims)
return(integrated_seurat)
}
# All samples is too large to integrate
Idents(neurons) <- "DiseaseStatus"
levels(neurons)
neur.PD <- subset(neurons, idents = "PD")
neur.PDiso <- subset(neurons, idents = "PD-iso")
neur.HC <- subset(neurons, idents = "HC")
# make a list of seurat objects by our cell type variable
# will integrate the PD, PD-iso, HC separately and then merge them will see if will integrate or not
sublist <- SplitObject(neur.HC, split.by = "Line")
int.HC <- integrate_seurat_objects(sublist, dims = 1:30)
View(sublist)
int.HC <- integrate_seurat_objects(sublist, dims = 1:30)
rm(sublist)
sublist <- SplitObject(neur.PD, split.by = "Line")
int.PD <- integrate_seurat_objects(sublist, dims = 1:30)
rm(sublist)
sublist <- SplitObject(neur.PDiso, split.by = "Line")
int.PDiso <- integrate_seurat_objects(sublist, dims = 1:30)
# Create a list of the three Seurat objects
DefaultAssay(int.HC) <- "RNA"
DefaultAssay(int.PD) <- "RNA"
DefaultAssay(int.PDiso) <- "RNA"
Neuron_list <- list("HC" = int.HC,"PD" = int.PD,"PD-iso" = int.PDiso)
# Integrate the Seurat objects
integrated_seurat <- integrate_seurat_objects(Neuron_list, dims = 1:20)
# save integrated objects
saveRDS(int.HC, "/Users/rhalenathomas/Documents/Data/scRNAseq/ParseExample/Ex2_48well/ParseNCADDsamplesNeuronsintHC.RDS")
saveRDS(int.PD, "/Users/rhalenathomas/Documents/Data/scRNAseq/ParseExample/Ex2_48well/ParseNCADDsamplesNeuronsintPD.RDS")
saveRDS(int.PDiso, "/Users/rhalenathomas/Documents/Data/scRNAseq/ParseExample/Ex2_48well/ParseNCADDsamplesNeuronsintPDiso.RDS")
